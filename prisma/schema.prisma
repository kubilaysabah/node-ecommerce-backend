// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Logs {
  id        Int      @id @default(autoincrement())
  message   String
  createdAt DateTime @default(now())
}

model Addresses {
  id      Int    @id @default(autoincrement())
  name    String
  address String
  phone   String
}

model Banners {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  url         String?
  image       String
}

model CategoryImages {
  id           Int         @id @default(autoincrement())
  name         String
  image        String
  Categories   Categories? @relation(fields: [categoriesId], references: [id])
  categoriesId Int?
}

model Categories {
  id                      Int                        @id @default(autoincrement())
  parent_id               Int?
  code                    String                     @unique
  url                     String                     @unique
  name                    String
  description             String?
  content                 String?
  images                  CategoryImages[]
  ProductsCategories      ProductCategoryRelations[]
  PostCategoryRelations   PostCategoryRelations?     @relation(fields: [postCategoryRelationsId], references: [id])
  postCategoryRelationsId Int?
}

model ProductVariants {
  id    Int    @id @default(autoincrement())
  code  String @unique
  name  String
  value String
}

model ProductImages {
  id                    Int                     @id @default(autoincrement())
  code                  String                  @unique
  name                  String
  image                 String
  ProductImageRelations ProductImageRelations[]
}

model Brands {
  id                      Int                     @id @default(autoincrement())
  code                    String                  @unique
  name                    String
  description             String?
  image                   String
  productBrandRelationsId Int?
  ProductBrandRelations   ProductBrandRelations[]
}

model Products {
  id                      Int                        @id @default(autoincrement())
  code                    String                     @unique
  url                     String                     @unique
  name                    String
  description             String?
  content                 String?
  price                   Float
  quantity                Int
  rating                  Float                      @default(0)
  ProductsCategories      ProductCategoryRelations[]
  ProductOrderRelations   ProductOrderRelations[]
  ProductSellerRelations  ProductSellerRelations[]
  ProductImageRelations   ProductImageRelations[]
  productBrandRelationsId Int?
  ProductBrandRelations   ProductBrandRelations?     @relation(fields: [productBrandRelationsId], references: [id])
}

model Sellers {
  id                     Int                      @id @default(autoincrement())
  code                   String                   @unique
  name                   String
  description            String?
  image                  String
  phone                  String                   @unique
  email                  String                   @unique
  rating                 Float                    @default(0)
  ProductSellerRelations ProductSellerRelations[]
}

model Users {
  id                   Int                  @id @default(autoincrement())
  image                String?
  firstname            String
  lastname             String
  phone                String               @unique
  email                String               @unique
  password             String
  userOrderRelationsId Int?
  UserOrderRelations   UserOrderRelations[]
}

model Orders {
  id                    Int                     @id @default(autoincrement())
  code                  String                  @unique
  status                Int                     @default(0)
  total                 Float
  userId                Int
  ProductOrderRelations ProductOrderRelations[]
  UserOrderRelations    UserOrderRelations?     @relation(fields: [userOrderRelationsId], references: [id])
  userOrderRelationsId  Int?
}

model Pages {
  id          Int     @id @default(autoincrement())
  title       String
  description String?
  content     String?
  image       String?
}

model Posts {
  id                      Int                    @id @default(autoincrement())
  title                   String
  description             String?
  content                 String?
  image                   String?
  PostCategoryRelations   PostCategoryRelations? @relation(fields: [postCategoryRelationsId], references: [id])
  postCategoryRelationsId Int?
}

model ProductImageRelations {
  id        Int             @id @default(autoincrement())
  productId Int
  image     ProductImages[]
  Products  Products        @relation(fields: [productId], references: [id])
}

model ProductBrandRelations {
  id        Int        @id @default(autoincrement())
  productId Int
  brandId   Int
  brand     Brands     @relation(fields: [brandId], references: [id])
  Products  Products[]
}

model ProductCategoryRelations {
  id         Int          @id @default(autoincrement())
  productId  Int
  categoryId Int
  Products   Products[]
  Categories Categories[]
}

model ProductOrderRelations {
  id        Int        @id @default(autoincrement())
  productId Int
  orderId   Int
  Products  Products[]
  Orders    Orders[]
}

model ProductSellerRelations {
  id        Int        @id @default(autoincrement())
  productId Int
  sellerId  Int
  Products  Products[]
  Sellers   Sellers[]
}

model UserOrderRelations {
  id     Int      @id @default(autoincrement())
  userId Int
  Users  Users    @relation(fields: [userId], references: [id])
  Orders Orders[]
}

model PostCategoryRelations {
  id         Int          @id @default(autoincrement())
  postId     Int
  categoryId Int
  Posts      Posts[]
  Categories Categories[]
}
